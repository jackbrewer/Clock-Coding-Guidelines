section#css
	h1 CSS
	.row
		.col-6
			p We try to keep stylesheets as easy to read as possible, using line-breaks between rules. We aggregate our styles before they get output to the browser, removing any extra whitespace to save on file size.
			ul
				li Use lowercase with hyphens for class and ID names.
				li Use tabs to indent code.
				li Put a space before 
					code {
					|  in rule declarations.
				li Put a space after 
					code :
					|  in property declarations.
				li Use hex colours. These should be in lowercase and shorthand where possible &mdash; for example: 
					code #fff
					| .
			p Shorthand can be used for style attributes that have integer or hex-based values, but background and font values should be separated out into individual parameters to increase readability.

		.col-6
			pre: code.prettyprint
				| #my-id {
				|   position: absolute;
				|   top: 0;
				|   margin: 10px 0;
				|   padding: 10px 15px 15px 10px;
				|   background-image: url("image.png");
				|   background-position: 0 0;
				|   background-repeat: no-repeat;
				| }
				| 
				| .my-class {
				|   font-family: Georgia, "Times New Roman", serif;
				|   font-size: 15px;
				|   line-height: 26px;
				|   color: #fff;
				| }

	h2 CSS3
	.row
		.col-8
			p We embrace progressive enhancement &mdash; CSS3 is a big part of that. Using browser vendor prefixes, we add rounded corners, shadows, multiple background images, background sizes, angles, gradients, animations (and so on), to embellish a strong base level experience that older browsers can provide.
			p CSS3 is a powerful and lightweight to reward more advanced users, but the most basic experience needs to be considered first and foremost.
		.col-4
			aside.callout
				p Look out for CSS3 properties (such as 
					a(href='http://caniuse.com/border-radius') border radius
					)  which no longer need vendor prefixes.
					a(href='http://html5please.us') html5please.us
					|  is a useful resource for checking current levels of browser support.

	h2 Vendor Prefixes
	.row
		.col-4
			pre: code.prettyprint
				| -webkit-transform: skew(6deg);
				|    -moz-transform: skew(6deg);
				|     -ms-transform: skew(6deg);
				|      -o-transform: skew(6deg);
				|         transform: skew(6deg);
		.col-8
			p To ensure maximum compatibility with all major browsers, we use four vendor prefixes for any CSS3 properties used &mdash; Webkit, Mozilla, Microsoft and Opera.
			p These should be indented with spaces so the properties line up. This allows for easier multi-line editing. The unprefixed version of the property should always appear last.

	h2 Web Fonts
	.row
		.col-8
			p Wherever possible we use web fonts instead of images or Flash on our sites. It saves on creating large image sprites or relying on plugins. It also makes content management much easier. Font files also tend to be smaller in size, increasing page speed.
			p When using non-websafe fonts, we primarily make use of CSS 
				code @font-face
				| , utilising the 
				a(href='http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax') Fontspring @Font-Face Syntax
				| .  We source our fonts from legal web font providers such as 
				a(href='http://www.fontsquirrel.com') Font Squirrel
				| , 
				a(href='http://www.google.com/webfonts') Google Web Fonts
				|  and 
				a(href='https://typekit.com') Typekit
				| .
		.col-4
			p.font-face Aa

	h2 IE Stylesheets
	p Internet Explorer hacks should be avoided wherever possible. On the rare occasion that an IE bug can't be fixed with regular CSS, we move our IE-relevant hacks into their own stylesheet. This is included in the head of the document as follows:
	pre: code.prettyprint
		| &lt;!--[if lt IE 9]&gt;
		|   &lt;link rel="stylesheet" href="/resource/css/internet-explorer.css"&gt;
		| &lt;![endif]--&gt;
	p Everything that is added to this stylesheet

	h2 Code Commenting
	.row
		.col-6
			p Within well organised files, code comments are invaluable to help developers navigate through projects and complete their work.
			p CSS files should have a title at the top, describing the file's purpose.
			p Each section of the file should be grouped according to content and relevance, and titles should be used to clearly identify what a group of styles is for. Within these, sub-headers can be used to identify certain related content styles.
		.col-6
			pre: code.prettyprint
				| /**
				|  * Global.css - Defines all global styles used
				|  * throughout multiple site sections
				|  */
				| 
				| /** Structural Styles **/
				| 
				| /* Styles for the main navigation */
				| .styles {
				| }
				| 
				| /** General Classes Used Throughout The Site **/
				| .styles {
				| }